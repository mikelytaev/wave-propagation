from propagators._utils import *
import numpy as np
import matplotlib.pyplot as plt

from propagators._utils import d_k_x

k0 = 2*cm.pi
k_z = np.linspace(0, k0, 300)
angles = np.linspace(0, fm.asin(k_z[-1] / k0)*180/cm.pi, 300)
k_x_r = np.array([cm.sqrt(k0**2 - kz**2) for kz in k_z])
k_x_1 = d_k_x(k_z=k_z, dx=1, pade_order=(1, 1), dz=0.0000001, z_order=2, alpha=0)
k_x_2 = d_k_x(k_z=k_z, dx=1, pade_order=(3, 4), dz=0.0000001, z_order=2, alpha=0)
k_x_3 = d_k_x(k_z=k_z, dx=1, pade_order=(7, 8), dz=0.0000001, z_order=2, alpha=0)
k_x_4 = d_k_x(k_z=k_z, dx=10, pade_order=(1, 1), dz=0.0000001, z_order=2, alpha=0)
k_x_5 = d_k_x(k_z=k_z, dx=10, pade_order=(3, 4), dz=0.0000001, z_order=2, alpha=0)
k_x_6 = d_k_x(k_z=k_z, dx=10, pade_order=(7, 8), dz=0.0000001, z_order=2, alpha=0)

plt.figure(figsize=(6, 3.2))
plt.plot(angles, (np.abs(k_x_1 - k_x_r)).real, 'r', label='Pade-[1/1] Δx=λ')
plt.plot(angles, (np.abs(k_x_2 - k_x_r)).real, 'y', label='Pade-[3/4] Δx=λ')
plt.plot(angles, (np.abs(k_x_3 - k_x_r)).real, 'b', label='Pade-[7/8] Δx=λ')
plt.plot(angles, (np.abs(k_x_4 - k_x_r)).real, 'r--', label='Pade-[1/1] Δz=10λ')
plt.plot(angles, (np.abs(k_x_5 - k_x_r)).real, 'y--', label='Pade-[3/4] Δz=10λ')
plt.plot(angles, (np.abs(k_x_6 - k_x_r)).real, 'b--', label='Pade-[7/8] Δz=10λ')
plt.xlabel('Propagation angle, degrees')
plt.ylabel('k_x abs. error')
plt.xlim([0, angles[-1]])
plt.yscale("log")
plt.ylim([2e-15, 1])
plt.legend()
plt.grid()
plt.tight_layout()
plt.show()

f, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, sharey=True, figsize=(12, 3.2))

k_x_1 = d_k_x(k_z=k_z, dx=1, pade_order=(1, 1), dz=0.25, z_order=2, alpha=0)
k_x_2 = d_k_x(k_z=k_z, dx=1, pade_order=(3, 4), dz=0.25, z_order=4, alpha=0)
k_x_3 = d_k_x(k_z=k_z, dx=1, pade_order=(7, 8), dz=0.25, z_order=5, alpha=0)
ax1.plot(angles, np.abs(k_x_1 - k_x_r), label='2nd order')
ax1.plot(angles, np.abs(k_x_2 - k_x_r), label='4th order')
ax1.plot(angles, np.abs(k_x_3 - k_x_r), label='joined')
ax1.set_xlabel('Propagation angle, degrees')
ax1.set_ylabel('k_x abs. error')
ax1.set_xlim([0, angles[-1]])
ax1.set_yscale("log")
ax1.set_ylim([2e-10, 1])
ax1.legend()
ax1.set_title("Δz=0.25λ")
ax1.grid()

k_x_1 = d_k_x(k_z=k_z, dx=1, pade_order=(1, 1), dz=0.5, z_order=2, alpha=0)
k_x_2 = d_k_x(k_z=k_z, dx=1, pade_order=(3, 4), dz=0.5, z_order=4, alpha=0)
k_x_3 = d_k_x(k_z=k_z, dx=1, pade_order=(7, 8), dz=0.5, z_order=5, alpha=0)
ax2.plot(angles, np.abs(k_x_1 - k_x_r), label='2nd order')
ax2.plot(angles, np.abs(k_x_2 - k_x_r), label='4th order')
ax2.plot(angles, np.abs(k_x_3 - k_x_r), label='joined')
ax2.set_xlabel('Propagation angle, degrees')
ax2.set_xlim([0, angles[-1]])
ax2.set_yscale("log")
ax2.set_ylim([2e-10, 1])
ax2.legend()
ax2.set_title("Δz=0.5λ")
ax2.grid()

k_x_1 = d_k_x(k_z=k_z, dx=1, pade_order=(1, 1), dz=1.0, z_order=2, alpha=0)
k_x_2 = d_k_x(k_z=k_z, dx=1, pade_order=(3, 4), dz=1.0, z_order=4, alpha=0)
k_x_3 = d_k_x(k_z=k_z, dx=1, pade_order=(7, 8), dz=1.0, z_order=5, alpha=0)
ax3.plot(angles, np.abs(k_x_1 - k_x_r), label='2nd order')
ax3.plot(angles, np.abs(k_x_2 - k_x_r), label='4th order')
ax3.plot(angles, np.abs(k_x_3 - k_x_r), label='joined')
ax3.set_xlabel('Propagation angle, degrees')
ax3.set_xlim([0, angles[-1]])
ax3.set_yscale("log")
ax3.set_ylim([2e-10, 1])
ax3.legend()
ax3.set_title("Δz=1.0λ")
ax3.grid()

k_x_1 = d_k_x(k_z=k_z, dx=1, pade_order=(1, 1), dz=2.0, z_order=2, alpha=0)
k_x_2 = d_k_x(k_z=k_z, dx=1, pade_order=(3, 4), dz=2.0, z_order=4, alpha=0)
k_x_3 = d_k_x(k_z=k_z, dx=1, pade_order=(7, 8), dz=2.0, z_order=5, alpha=0)
ax4.plot(angles, np.abs(k_x_1 - k_x_r), label='2nd order')
ax4.plot(angles, np.abs(k_x_2 - k_x_r), label='4th order')
ax4.plot(angles, np.abs(k_x_3 - k_x_r), label='joined')
ax4.set_xlabel('Propagation angle, degrees')
ax4.set_xlim([0, angles[-1]])
ax4.set_yscale("log")
ax4.set_ylim([2e-10, 1])
ax4.legend()
ax4.set_title("Δz=2.0λ")
ax4.grid()

f.tight_layout()
#plt.subplots_adjust(top=0.915, wspace=0.075)
plt.show()